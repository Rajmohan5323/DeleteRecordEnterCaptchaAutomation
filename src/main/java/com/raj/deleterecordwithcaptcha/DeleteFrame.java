/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.raj.deleterecordwithcaptcha;

import io.github.bonigarcia.wdm.WebDriverManager;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sourceforge.tess4j.ITesseract;
import net.sourceforge.tess4j.Tesseract;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

/**
 *
 * @author rajmo
 */
public class DeleteFrame extends javax.swing.JFrame {

    /**
     * Creates new form DeleteFrame
     */
    public DeleteFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unite Tool For Pacs");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("KARUR PUGALUR BRANCH");

        deleteButton.setBackground(new java.awt.Color(51, 204, 255));
        deleteButton.setText("Run");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("TN24103219_de@coopsindia.com");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/machintlogo.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel4.setText("Acceleration Speed : 2 Seconds");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 64, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jLabel4)
                .addGap(52, 52, 52)
                .addComponent(deleteButton)
                .addGap(74, 74, 74))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private static String readCaptcha(WebElement captchaImage) {
        try {
            // Get the screenshot of the captcha image
            File screenshot = captchaImage.getScreenshotAs(OutputType.FILE);

            // Use Tesseract to perform OCR on the captcha image
            ITesseract tesseract = new Tesseract();
            tesseract.setDatapath("C:\\tessdata\\"); // Set the path to your Tesseract data directory
            return tesseract.doOCR(screenshot);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        try{
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();

        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(1, TimeUnit.SECONDS);
        driver.get("https://tn.unitetools.in/");
        
        driver.findElement(By.id("user")).sendKeys("TN12102241_de@coopsindia.com");//Myladi
        driver.findElement(By.id("pwd")).sendKeys("Unite@123");
        driver.findElement(By.id("btnvalidatelogin")).click();

        // Click on 'Customer Data' link
        WebElement customerData = driver.findElement(By.linkText("Customer Data"));
        customerData.click();

        // Navigate to the delete page
        WebElement deletePage = driver.findElement(By.xpath("//a[contains(@href,'/Utilities/DeleteCustomerData/DeleteCustomerData')]/li[contains(@class,'list-group-item') and contains(@class,'bg-primary')]"));
        deletePage.click();

        // Read data from Excel
        FileInputStream fileInputStream;
        
            fileInputStream = new FileInputStream(new File("D:\\Vasistapuram.xlsx"));
       
        Workbook workbook = new XSSFWorkbook(fileInputStream);
        Sheet sheet = workbook.getSheetAt(0);

        // Iterate through each row in the Excel sheet
        DataFormatter dataFormatter = new DataFormatter();
        for (Row row : sheet) {
            Cell cell = row.getCell(0); // Assuming column A contains the values
            if (cell != null && cell.getCellTypeEnum() == CellType.NUMERIC) {
                String formattedValue = dataFormatter.formatCellValue(cell);
                System.out.println("Processing value: " + formattedValue);

                WebElement inputField = driver.findElement(By.id("idamissionno"));
                inputField.clear(); // Clear the input field
                inputField.sendKeys(formattedValue); // Enter the value from Excel

                WebDriverWait wait = new WebDriverWait(driver,(long) 2);
                

                // Click on search button
                WebElement searchButton = driver.findElement(By.id("iconMemberSearch"));
                searchButton.click();
                    try {
                        // Check if the "No Data Found" alert is present
                        WebElement alertBox = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("sweet-alert")));
                        WebElement alertTitle = alertBox.findElement(By.xpath(".//h2[text()='No Data Found']"));
                         
                        if (alertTitle.isDisplayed()) {
                            WebElement okButton = alertBox.findElement(By.xpath(".//button[@class='confirm']"));
                            okButton.click();
                            continue;// Move to next iteration
                        }
                    } catch (Exception e) {
                        // No alert found, proceed with deletion process
                        System.out.println("No alert found, proceeding with deletion for value: " + e.getMessage());
                    }
            
                    // Explicitly wait for the product dropdown to be clickable
                    WebElement productDropdown = wait.until(ExpectedConditions.elementToBeClickable(By.id("ProductCode")));
                    Select productSelect = new Select(productDropdown);
                    productSelect.selectByVisibleText("Customer");

                    // Select "Admission No." from the task type dropdown
                    Select taskTypeDropdown = new Select(driver.findElement(By.id("TaskType")));
                    taskTypeDropdown.selectByValue("1");
                    
                    wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector("div.bg[style*='position: absolute']")));
                    
                    // Click the delete button
                    WebElement deleteButton = driver.findElement(By.id("btnDelete"));
                 //   wait.until(ExpectedConditions.elementToBeClickable(deleteButton));
                  //  deleteButton.click();
                   wait.until(ExpectedConditions.presenceOfElementLocated(By.id("btnDelete")));
                   
                   JavascriptExecutor js = (JavascriptExecutor) driver;
                   js.executeScript("arguments[0].click();", deleteButton);
                  
                    try {
                        // Check if the "No Data Found" alert is present
                        WebElement alertBox1 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("sweet-alert")));
                        WebElement alertTitle1 = alertBox1.findElement(By.xpath(".//h2[text()='* Marked Fields Are Mandatory']"));
                         
                        if (alertTitle1.isDisplayed()) {
                            WebElement okButton = alertBox1.findElement(By.xpath(".//button[@class='confirm']"));
                            okButton.click();
                          //  continue;// Move to next iteration
                          
                            // Added by rajmohan
                             
                          //  WebElement homeButton = driver.findElement(By.cssSelector("a.pl-2.pr-2.home-botton.bg-white"));
                           // Click the element
                          //  homeButton.click();
                            
                            
                            WebElement homeButton = driver.findElement(By.xpath("//a[@href='/Home/MenuScreen']"));
                            homeButton.click();
                            
                            // Locate and click the "Personal Details" tab
                            WebElement personalDetailsTab = wait.until(ExpectedConditions.elementToBeClickable(By.id("v-pills-01-tab")));
                            personalDetailsTab.click();
                            
                            wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("v-pills-01")));
                             
                             
                            WebElement verifyButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("#v-pills-01 .list-group a[href='/Membership/ModifyCustomerPersonalDeatils/VerifyorEditCustomerPersonalDeatils?formid=1003&moduleid=1']")));
                            verifyButton.click();
                            
                            // Locate the input field by its ID and enter the value
                            WebElement inputField1 = driver.findElement(By.id("idamissionno"));
                            inputField1.clear(); // Clear the input field
                            inputField1.sendKeys(formattedValue); // Enter the value from Excel  
                            
                            WebElement statusDropdown = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("Status")));
                            Select statusSelect = new Select(statusDropdown);
                            statusSelect.selectByVisibleText("Not Matched");
                            
                            WebElement reasonDropdown = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("ModificationReasonId")));
                            Select reasonSelect = new Select(reasonDropdown);
                            reasonSelect.selectByVisibleText("Record mismatch");
                            
                            WebElement editButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("btnModify")));
                            editButton.click();
                            
                            
                            
                          //  WebElement modifyButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("btnVerify")));
                          //  modifyButton.click();
                            
                        //    WebElement confirmButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("btnSavedataFRompopup")));
                         //   confirmButton.click();
                            
                          // Ensure the page is fully loaded before interacting
                           //  wait.until(ExpectedConditions.jsReturnsValue("return document.readyState=='complete'"));
                          /*  WebElement hiddenInputDescription = driver.findElement(By.id("MemberTypeDescription"));
                            WebElement hiddenInputCode = driver.findElement(By.xpath("//input[@name='MemberTypeCode' and @type='hidden']"));
                            JavascriptExecutor js1 = (JavascriptExecutor) driver;
                           // js1.executeScript("arguments[0].removeAttribute('disabled');", typeDropdown);
                           
                           
                            js1.executeScript("arguments[0].setAttribute('value', 'A Type');", hiddenInputDescription);
                            js1.executeScript("arguments[0].setAttribute('value', '1');", hiddenInputCode); */
                          
                           WebElement dropdown = driver.findElement(By.id("MemberTypeCode"));

                            // Enable the dropdown and add an option using JavaScript
                           // JavascriptExecutor js1 = (JavascriptExecutor) driver;
                            js.executeScript("arguments[0].removeAttribute('disabled');", dropdown);
                            js.executeScript("var option = document.createElement('option');"
                                    + "option.text = 'A Type';"
                                    + "option.value = '1';"
                                    + "arguments[0].add(option);", dropdown);

                            // Select the option by value
                            js.executeScript("arguments[0].value = '1';", dropdown);
                            
                            WebElement surnameInput = driver.findElement(By.id("MemberSurName"));
                            surnameInput.clear();
                            surnameInput.sendKeys("Surname");
                            
                            WebElement nameInput = driver.findElement(By.id("MemberName"));
                            nameInput.clear();
                            nameInput.sendKeys("Name");
                            
                             Select villageCodeDropdown = new Select(driver.findElement(By.id("VillageCode")));
                             villageCodeDropdown.selectByValue("10394");
                             
                             WebElement fatherNameInput = driver.findElement(By.id("FatherName"));
                             fatherNameInput.clear();
                             fatherNameInput.sendKeys("Father");
                            WebDriverWait wait1 = new WebDriverWait(driver, (long) 0.1);
                            
                            WebElement stateCode =null;
                            try{
                             stateCode = wait1.until(ExpectedConditions.visibilityOfElementLocated(By.id("StateCode")));
                                    
                            }catch(Exception e){
                                System.out.println("SSS"+e.getMessage());
                                System.out.println("StateCode dropdown is not available or visible. Skipping selection.");
                                
                            }
                            System.out.println("Exit Catch Block");
                            
                            if (stateCode != null) {
                            Select stateCodeSelect = new Select(stateCode);
                            stateCodeSelect.selectByVisibleText("Tamil Nadu");
                            System.out.println("If block StateCode");
                            }
                            
                            WebElement pinCode = null;
                            try{
                              pinCode = wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//input[@id='Pincode']")));
                            }catch(Exception e){
                                System.out.println("PinCode is not available or visible. Skipping selection.");
                                //break; // Exit the method if dropdown is not found or visible
                               WebElement editButton1 = wait.until(ExpectedConditions.elementToBeClickable(By.id("btnModify")));
                              editButton1.click(); 
                            }
                            if (pinCode != null) {
                                System.out.println("If block---------------------------- PinCode");
                                pinCode.sendKeys("123456");
                            }
                            
                            
                            
                           // Wait for the modal to become invisible
                           
                            
                          //   WebElement editButton1 = wait1.until(ExpectedConditions.elementToBeClickable(By.id("btnModify")));
                          //   editButton1.click();
                            
                              
                            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.id("popuppreview")));

                            // Wait for the button to be clickable
                            WebElement button = wait.until(ExpectedConditions.elementToBeClickable(By.id("btnSavedataFRompopup")));
                            button.click();
                                    
                             // WebElement button = driver.findElement(By.cssSelector("#btnSavedataFRompopup"));
                             //  button.click();      
                            
                          /*  try{
                              WebElement button = driver.findElement(By.xpath("//button[@id='btnSavedataFRompopup']"));
                              button.click();
                              }catch(Exception e){
                                  System.out.println(e.getMessage());
                              }*/
                            
                            WebElement alertBox2 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("sweet-alert")));
                            WebElement alertTitle2 = alertBox2.findElement(By.xpath(".//h2[text()='Data updated successfully']"));
                         
                             if (alertTitle2.isDisplayed()) {
                             WebElement okButton2 = alertBox2.findElement(By.xpath(".//button[@class='confirm']"));
                             okButton2.click();
                             
                            WebElement homeButton2 = driver.findElement(By.xpath("//a[@href='/Home/MenuScreen']"));
                            homeButton2.click();
                            
                            WebElement customerData1 = driver.findElement(By.linkText("Customer Data"));
                            customerData1.click();

                            // Navigate to the delete page
                            WebElement deletePage2 = driver.findElement(By.xpath("//a[contains(@href,'/Utilities/DeleteCustomerData/DeleteCustomerData')]/li[contains(@class,'list-group-item') and contains(@class,'bg-primary')]"));
                            deletePage2.click();
                             
                            WebElement inputField2 = driver.findElement(By.id("idamissionno"));
                            inputField2.clear(); // Clear the input field
                            inputField2.sendKeys(formattedValue); // Enter the value from Excel
                            
                            WebElement searchButton1 = driver.findElement(By.id("iconMemberSearch"));
                            searchButton1.click();
                                try {
                                    // Check if the "No Data Found" alert is present
                                    WebElement alertBox3 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("sweet-alert")));
                                    WebElement alertTitle3 = alertBox3.findElement(By.xpath(".//h2[text()='No Data Found']"));

                                    if (alertTitle3.isDisplayed()) {
                                        WebElement okButton1 = alertBox3.findElement(By.xpath(".//button[@class='confirm']"));
                                        okButton1.click();
                                        continue;// Move to next iteration
                                    }
                                } catch (Exception e) {
                                    // No alert found, proceed with deletion process
                                    System.out.println("No alert found, proceeding with deletion for value: " + e.getMessage());
                                }
                                
                                // Explicitly wait for the product dropdown to be clickable
                                 WebElement productDropdown1 = wait.until(ExpectedConditions.elementToBeClickable(By.id("ProductCode")));
                                 Select productSelect1 = new Select(productDropdown1);
                                 productSelect1.selectByVisibleText("Customer");
                                
                                // Select "Admission No." from the task type dropdown
                                Select taskTypeDropdown1 = new Select(driver.findElement(By.id("TaskType")));
                                taskTypeDropdown1.selectByValue("1");

                                wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector("div.bg[style*='position: absolute']")));

                                // Click the delete button
                                WebElement deleteButton1 = driver.findElement(By.id("btnDelete"));
                             //   wait.until(ExpectedConditions.elementToBeClickable(deleteButton));
                              //  deleteButton.click();
                                wait.until(ExpectedConditions.presenceOfElementLocated(By.id("btnDelete")));

                              // JavascriptExecutor js2 = (JavascriptExecutor) driver;
                               js.executeScript("arguments[0].click();", deleteButton1);
                             //  continue;
                             }
                            
                            
                        }
                    } catch (Exception e) {
                        // No alert found, proceed with deletion process
                        System.out.println("Marked filed---> " + e.getMessage());
                    }
                    
                     // Find and read the captcha image
                     WebElement captchaImage = driver.findElement(By.id("imgcapt"));
                     String captchaText = readCaptcha(captchaImage);

                    System.out.println("Captcha Text: " + captchaText);
                    
                    WebElement captchaInput = driver.findElement(By.id("Captcha"));
                    captchaInput.sendKeys(captchaText);

                    // Click validate button
                    WebElement validateButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[contains(text(), 'Validate')]")));
                    validateButton.click();
                    
                    

                    // Handle SweetAlert confirmation dialog
                     WebElement sweetAlert = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("sweet-alert")));
                     WebElement h2Element = sweetAlert.findElement(By.tagName("h2"));
                    String message = h2Element.getText().trim();
                    System.out.println("messageeeee--------> "+ message);
                    
                    while (true) {
                        if (message.equals("Data deleted successfully")) {
                            // Click OK button
                            
                            WebElement okButton = sweetAlert.findElement(By.className("confirm"));
                            okButton.click();
                            
                            // Initialize a new FileOutputStream for writing data
                            FileOutputStream outputStream = new FileOutputStream(new File("D:\\Vasistapuram.xlsx"));
                            // After successful deletion, mark the record as deleted in Excel
                            Cell resultCell = row.createCell(1); // Assuming column B for result status
                            resultCell.setCellValue(formattedValue+" Deleted");
                            cell.setCellValue("");
                            // Save changes to the Excel file
                             workbook.write(outputStream);
                            
                            break; // Exit the loop if data is successfully deleted
                        } else if (message.equals("Enter valid captcha")) {
                            // Click OK button
                           
                             WebElement okButton = sweetAlert.findElement(By.className("confirm"));
                            okButton.click();
                            
                            // Click Refresh Captcha button
                            WebElement refreshCaptchaButton = driver.findElement(By.xpath("//button[@class='btn btn-primary' and contains(@onclick,'RefreshCaptcha')]"));
                            refreshCaptchaButton.click();
                           
                            // Find and read the new captcha image
                             WebElement captchaImage2 = driver.findElement(By.id("imgcapt"));
                            String captchaText2 = readCaptcha(captchaImage2);

                            System.out.println("Captcha Text 2: " + captchaText2);
                            
                            WebElement captchaInput2 = driver.findElement(By.id("Captcha"));
                            captchaInput2.sendKeys(captchaText2);
                            
                            // Click validate button for the second attempt
                            WebElement validateButton2 = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[contains(text(), 'Validate')]")));
                            validateButton2.click();
                            
                            // Wait for the next SweetAlert confirmation dialog
                            sweetAlert = wait.until(ExpectedConditions.visibilityOfElementLocated(By.className("sweet-alert")));
                            h2Element = sweetAlert.findElement(By.tagName("h2"));
                            message = h2Element.getText().trim();
                        }else{
                            System.out.println("Unexpected SweetAlert message: " + message);
                            break; // Exit the loop in case of unexpected message
                        }
                    }
         
            }
        }

        workbook.close();
        fileInputStream.close();
        }catch(Exception e){
            System.out.println(e.getMessage());
        }        
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
